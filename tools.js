function hookWasmMem32() {
  return new Int32Array(window["wasmMemHook"].buffer);
}

const memBuffer = window["wasmMemHook"].buffer;

// Creates a new view to "read" wasm buffer
const uint8View = new Uint8Array(memBuffer);
const int32View = hookWasmMem32();

/* Making of the game */
const searchValue = 746;
let foundIndexes = [];

function memIndexOf(val) {
// Loop through the memory and find all indexes with the value 746
for (let i = 0; i < int32View.length; i++) {
  if (int32View[i] === searchValue) {
    foundIndexes.push(i);
  }
}

// Output the result
if (foundIndexes.length > 0) {
  console.log(`Found value ${searchValue} at indexes: ${foundIndexes.join(', ')}`);
} else {
  console.log(`Value ${searchValue} not found in memory.`);
}
}

/* Found after searching for 746 while money = 746 */
const addresses = [
    54529, 89595, 100542, 100546, 160190, 160194, 228091, 228094, 228097, 228100, 
    242137, 242140, 242143, 242146, 242149, 242152, 242155, 255703, 255706, 255709, 
    255712, 255715, 255718, 255721, 260440, 260443, 260446, 260449, 261046, 261049, 
    261052, 261055, 261058, 261061, 261064, 268849, 268852, 268855, 268858, 268861, 
    268864, 302302, 302305, 302308, 302311, 304123, 304126, 304129, 304132, 304135, 
    304138, 304141, 333167, 334472, 335777, 337082, 338387, 339692, 340997, 342302, 
    343610, 344915, 350048, 350825, 353687, 353705, 353723, 353735, 353747, 353759, 
    353771, 533911, 536803, 548818, 595299, 1193081, 3658910, 3682482, 3730362, 3730367, 
    3747112, 3747115, 3757026, 3757030, 3762551, 3762554, 3764197, 3764202, 3770845, 
    3775385, 3775389, 3777727, 3798713, 3798716, 3798718, 3798744, 3798748, 3798929, 
    3798932, 3798933, 3798961, 3798963, 3842875, 3842924, 5581607, 5708023, 6062814, 
    6105764, 6105772, 6105780, 6363591, 6451898, 6452331, 6740710, 6744912, 6836302, 
    6854916, 6876057, 8751837, 8772404, 8801650, 8866894, 8869846, 12415245, 13227297, 
    13532487, 13547029, 13589691, 13590491, 13591331, 15067497, 19941672, 19998453, 
    20162854, 20314652, 20418187, 20421245, 20444273, 20453406, 25608204, 26541312, 
    26631145, 28250082, 28255560, 28429677, 28429680, 28442852, 28443970, 29251220, 
    29522794, 29583289, 29583290, 29583291, 29583292, 29604309, 29606859, 29868343, 
    29959292, 29978700, 30015302, 30288201, 30809810, 30927034, 30935242, 30943454, 
    31049862, 31058070, 31131782, 31168190, 31253746, 31327458, 31596730, 32002794, 
    32123406, 32142606, 32591216, 33262262, 38003448, 38383205, 38425121, 38885908
];

const nextVal = 0;

function findNext(list, val) {
  
}
findNext(adresses, nextVal);
